@-webkit-keyframes left{0%{opacity:0;right:0}to{opacity:1;right:50px}}@keyframes left{0%{opacity:0;right:0}to{opacity:1;right:50px}}*{-webkit-box-sizing:border-box;box-sizing:border-box;margin:0;color:#383838;font-family:"Rubik",sans-serif}a{text-decoration:none}ul{list-style:none}.container{max-width:1200px;width:100%;margin:auto}.title-wrapper{text-align:center}.common-title{font:700 30px Playfair Display,serif;display:inline-block;margin:30px 0;position:relative;text-transform:uppercase;letter-spacing:1}.common-title::after,.common-title::before{background:#9b9b9b;content:"";height:2px;position:absolute;top:19px;width:60px}.common-title::before{left:-81px}.common-title::after{right:-81px}.header,.navbar{display:-webkit-box;display:-ms-flexbox;display:flex}.header{background:#fff;padding:0 100px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;overflow:hidden}.navbar{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.navbar__item-link{display:inline-block;padding:61px 0 62px;margin:0 30px;font-weight:700;-webkit-transition:all .2s linear;transition:all .2s linear}.navbar__item-link:focus,.navbar__item-link:hover{color:#c09578}.search-cart,.search-container{display:-webkit-box;display:-ms-flexbox;display:flex}.search-container{position:relative}.cart-item,.search-close,.search-item{color:#2a2b2c;font-size:35px;cursor:pointer}.search-close{display:none}.search-input{display:none;position:absolute;top:-3px;right:50px;border:1px solid #ddd;color:#333;line-height:30px;padding:5px 5px 5px 20px;width:340px;-webkit-animation:left .5s linear;animation:left .5s linear}.search-input:focus,.search-input:hover{outline:0}.cart{position:relative}.search-item{margin-right:50px}.cart-count{background:#000;position:absolute;top:-8px;right:0;color:#fff;border-radius:50%;padding:4px 6px;font-size:12px}.cart:hover .cart-count{display:inline-block}.cart:hover:after{background:#fff;content:"Your cart is currently empty";position:absolute;top:50px;right:0;white-space:nowrap;padding:8px;border:1px solid #ddd}.wrapper{position:absolute;max-width:600px;width:100%;padding:15px;z-index:10;top:35%;left:380px}.hero{position:relative}.hero__img{max-width:1900px;width:100%;min-height:400px;height:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:80%;object-position:80%}.hero__title{font:400 46px/80px "Playfair Display",serif;color:#444;text-transform:uppercase}.hero__desc{font-size:17px;line-height:28px;margin:2px 0 34px}.hero__buy{border:1px solid #999;border-radius:50px;color:#666;display:inline-block;font-size:16px;font-weight:700;line-height:1;padding:17px 39px 15px;text-transform:uppercase;z-index:1;-webkit-transition:all .4s linear;transition:all .4s linear}.hero__buy:focus,.hero__buy:hover{background:#000;color:#fff}.advantages__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:60px 10px 30px}.advantages__car{color:#686868;font-size:36px}.advantages__item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-flex:0;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%}.advantages__text{width:60%;margin-left:30px}.advantages__title{font:25px Playfair Display,serif;margin-bottom:9px}.advantages__desc{color:#3e3e3e}.advantages__bottom{margin-top:30px;margin-bottom:60px}.advantages__bottom-image{display:inline-block;padding:0 15px;max-width:50%}.new-arrival{margin-bottom:30px}.new-arrival__container{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.new-arrival__card{max-width:25%;width:100%;position:relative}.new-arrival__card-image{display:inline-block;margin-top:20px;max-width:250px;height:200px;width:100%}.new-arrival__card-text_price{font:700 18px Playfair Display,serif;color:#666;text-align:center;margin-top:15px}.new-arrival__card-text_title{font:18px Playfair Display,serif;text-align:center;margin:10px 0 5px;width:90%}.new-arrival__card-link{display:block}.hover-icons{background:#fff;max-width:215px;width:100%;position:absolute;border-radius:50px;display:inline-block;line-height:1;text-align:center;padding:13px 26px 10px;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);-webkit-box-shadow:0 0 15px rgba(0,0,0,.1019607843);box-shadow:0 0 15px rgba(0,0,0,.1019607843)}.hover-icons i{font-size:24px;margin:0 10px}.testimonial{padding-top:30px;padding-bottom:60px;margin-bottom:30px;background:#f7f7f7}.testimonial__slider{text-align:center}.testimonial__slider-img{width:100px;height:100px;border-radius:50%;margin:auto}.testimonial__slider-text{font-size:18px;letter-spacing:1px;line-height:35px;margin:30px auto;width:63%}.testimonial__slider-author{font:700 18px Playfair Display,serif;letter-spacing:1px;margin:0}.news{padding-bottom:60px}.news__item,.news__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex}.news__item{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-flex:0;-ms-flex:0 0 33.333333%;flex:0 0 33.333333%;max-width:33.333333%;padding:15px;text-align:center}.news__img{width:100%;vertical-align:bottom}.news__text-wrapper{background:#fafafa;padding:20px 20px 25px;-webkit-transition:all .3s ease 0s;transition:all .3s ease 0s}.news__title{font:500 18px/28px Playfair Display,serif;color:#434343;letter-spacing:.5px;margin:4px 0 18px;-webkit-transition:all .3s ease;transition:all .3s ease}.news__title:focus,.news__title:hover{color:#c09578}.news__author,.news__date{font-size:13px;font-weight:500;letter-spacing:.2px;margin-right:15px;color:#8f8f8f}.news__item:hover .news__text-wrapper{background:#fff;-webkit-box-shadow:5px 5px 5px 0 rgba(0,0,0,.1);box-shadow:5px 5px 5px 0 rgba(0,0,0,.1)}.subscribe{background:#f7f7f7;padding:60px 10px}.subscribe__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.subscribe__title{font:400 30px Playfair Display,serif;margin-bottom:5px}.subscribe__desc{width:85%;font-size:14px}.subscribe__form,.subscribe__text{-webkit-box-flex:0;-ms-flex:0 0 50%;flex:0 0 50%;max-width:50%}.subscribe__form{margin:28px 0 40px;position:relative}.subscribe__input{background:#fff 0 0;border:medium;border-radius:50px;-webkit-box-shadow:0 0 15px rgba(0,0,0,.1019607843);box-shadow:0 0 15px rgba(0,0,0,.1019607843);color:#999;font-size:12px;height:56px;line-height:56px;padding:0 65px 0 40px;max-width:500px;width:100%;position:relative}.subscribe__input:focus,.subscribe__input:hover{outline:0}.subscribe__btn{background:url(../../image/subscribe-icon.png) no-repeat right 0 center;display:inline-block;width:37px;height:56px;border:0;border-left:1px solid #e2e0e0;position:absolute;right:120px;z-index:999;padding:0 20px 0 10px;cursor:pointer}@media (min-width:901px){.burger,.burger-close{display:none}}@media (max-width:1200px){.subscribe__wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;text-align:center}.subscribe__form,.subscribe__text{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%}.subscribe__desc{width:100%}.subscribe__btn{right:5%}}@media (max-width:900px){.container{position:relative}.header{display:block;padding:0 10px}.logo{margin:10px 0;text-align:center}.logo__img{width:100px}.navbar{display:none;opacity:0;-webkit-transition:opacity .3s ease;transition:opacity .3s ease}.navbar__item-link{font-size:14px;padding:5px;margin:5px}.search-cart{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;margin-bottom:20px;position:relative}.cart:hover:after{display:none}.search-input{width:180px;display:initial;padding:0 0 0 20px;right:30px}.cart-item,.search-close,.search-item{font-size:25px}.cart-item{margin-left:10px;margin-right:10px}.burger,.burger-close{position:absolute;top:3px;left:5px;font-size:25px}.burger-close{display:none;z-index:10;top:7px}.one-item{position:relative}.one-item::after{content:"";z-index:100;position:absolute;top:0;right:0;bottom:0;left:0;background:rgba(0,0,0,.7)}.wrapper{top:100px;left:10px;z-index:100}.hero__desc,.hero__title{color:#fff}.hero__title{font-size:24px;line-height:35px}.hero__desc{font-size:14px}.hero__buy{color:#fff}.news__wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.news__item{-webkit-box-flex:0;-ms-flex:0 0 100%;flex:0 0 100%;max-width:100%;padding:10px}}@media (max-width:600px){.common-title{font-size:24px}.common-title::before{left:-50px;width:35px}.common-title::after{right:-50px;width:35px}.advantages__wrapper{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-bottom:10px}.advantages__item{margin-bottom:30px}.advantages__title{font-size:22px}.advantages__text{font-size:13px;width:100%;margin-left:20px}.advantages__bottom{margin:0}.advantages__bottom-image{display:inline-block;padding:15px;max-width:100%;margin:auto}.new-arrival__container{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.new-arrival__card{max-width:100%;padding:10px;text-align:center}.testimonial__slider-text{width:90%}}@media (min-width:1200px) and (max-width:1400px){.wrapper{left:300px}}@media (min-width:601px) and (max-width:900px){.wrapper{top:150px;left:30px;z-index:100}.hero__img{min-height:500px;-o-object-position:80%;object-position:80%}.hero__title{font-size:32px;line-height:48px}.hero__desc{font-size:16px;line-height:1.5}.new-arrival__container{-ms-flex-wrap:wrap;flex-wrap:wrap}.new-arrival__card{padding:10px;max-width:100%;-ms-flex-preferred-size:50%;flex-basis:50%;text-align:center}}@media (min-width:901px) and (max-width:1200px){.header{padding:0 20px}.navbar__item-link{margin:0 20px}.hero__img{min-height:700px}.wrapper{top:150px;left:30px;z-index:100}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */